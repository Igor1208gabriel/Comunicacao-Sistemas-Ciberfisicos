name: Build and Analyze ROS2

on: [push, pull_request]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
          
      - name: Cache Docker Image
        uses: actions/cache@v4
        with:
          path: /tmp/docker-ros2-dev.tar
          key: docker-ros2-dev-${{ hashFiles('.devcontainer/Dockerfile', '.devcontainer/**') }}
          restore-keys: docker-ros2-dev-
      
      - name: Build DevContainer image
        run: |
          if [ -f /tmp/docker-ros2-dev.tar ]; then
            echo "🔄 Restaurando imagem do cache..."
            docker load < /tmp/docker-ros2-dev.tar
          else
            echo "🏗️  Construindo imagem do zero..."
          fi
          docker build -t ros2-dev -f .devcontainer/Dockerfile .devcontainer
          docker save ros2-dev > /tmp/docker-ros2-dev.tar

      - name: Build DevContainer image
        run: |
          docker build -t ros2-dev -f .devcontainer/Dockerfile .devcontainer


      - name: Build ROS2 Workspace
        run: |
            docker run --rm \
            --privileged \
            --network=host \
            --user root \
            -v ${{ github.workspace }}:/project \
            -w /project/ROS2/workspace \
            ros2-dev \
            bash -c "rosdep install --from-paths src --ignore-src -r -y && colcon build --symlink-install"


      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@fd88b7d7ccbaefd23d8f36f73b59db7a3d246602
        env:
          SONAR_HOST_URL: https://sonarcloud.io  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

